// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String @unique
}
model item_type{
  id Int @id @default(autoincrement())
  name String @unique
  inventories inventory[]
}

model inventory{
  id Int @id @default(autoincrement())
  id_player Int 
  id_item_type Int?  
  stack_size Int?
  item_type item_type?@relation(fields: [id_item_type], references: [id])
  owner character@relation(fields: [id_player],references: [id])
  @@unique ([id_player,id_item_type])
}
model spell{
  id Int @id @default(autoincrement())
  id_class Int @unique
  name String @unique
  class hero_class@relation(fields: [id_class],references: [id])

  players_first_spell character[] @relation("first_spell")
  players_second_spell character[] @relation("second_spell")
  players_third_spell character[] @relation("third_spell")
  players_fourth_spell character[] @relation("fourth_spell")

}
model hero_class{
  id Int @id @default(autoincrement())
  name String @unique
  weapons weapon[]
  players character[]
  spells spell[]
}
model weapon{
  id Int @id @default(autoincrement())
  name String @unique 
  level Int 
  vitality Int
  endurance Int
  strength Int
  defense Int
  power Int
  resistance Int
  precision Int
  agility Int
  rarity Int //OR STRING?
  description String?
  id_class Int 
  hero_class hero_class@relation(fields: [id_class], references: [id])
  owners character[] @relation()
}
model armor{
  id Int @id @default(autoincrement())
  name String @unique 
  level Int 
  vitality Int
  endurance Int
  strength Int
  defense Int
  power Int
  resistance Int
  precision Int
  agility Int
  rarity Int //OR STRING?
  description String?
  type Int  
  helmet_owners character[] @relation("helmet")
  chestplate_owners character[] @relation("chestplate")
  leggings_owners character[] @relation("leggings")
  gloves_owners character[] @relation("gloves")
}
model friend{
  id_user Int
  id_friend Int
  user player@relation("user",fields: [id_user], references: [id])
  friend player@relation("friend",fields: [id_friend], references: [id])

  @@unique ([id_user,id_friend]) //TODO CHECK
}

model character{
  id Int @id @default(autoincrement())
  level Int 
  vitality Int
  endurance Int
  strength Int
  defense Int
  power Int
  resistance Int
  precision Int
  agility Int
  id_first_spell Int?
  id_second_spell Int?
  id_third_spell Int?
  id_fourth_spell Int?
  id_helmet Int
  id_chestplate Int
  id_leggings Int
  id_gloves Int
  id_weapon Int
  id_class Int

  first_spell spell?@relation("first_spell",fields: [id_first_spell], references: [id])
  second_spell spell?@relation("second_spell",fields: [id_second_spell], references: [id])
  third_spell spell?@relation("third_spell",fields: [id_third_spell], references: [id])
  fourth_spell spell?@relation("fourth_spell",fields: [id_fourth_spell], references: [id])

  helmet armor?@relation("helmet",fields: [id_helmet], references: [id])
  chestplate armor?@relation("chestplate",fields: [id_chestplate], references: [id])
  leggings armor?@relation("leggings",fields: [id_leggings], references: [id])
  gloves armor?@relation("gloves",fields: [id_gloves], references: [id])

  weapon weapon@relation(fields: [id_weapon], references: [id])
  class hero_class@relation(fields: [id_class], references: [id])
  inventory inventory[]
  player player? 
}
model player{
  id Int @id @default(autoincrement())
  name String @unique
  password String? //??
  id_guild Int? 
  id_character Int? @unique
  character character?@relation(fields: [id_character], references: [id])
  guild guild?@relation(fields: [id_guild], references: [id])
  user friend[] @relation("user")
  friends friend[] @relation("friend")
}

model guild{
  id Int @id @default(autoincrement())
  players player[] 
  description String?
}

